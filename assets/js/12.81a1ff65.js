(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{334:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"工作区和暂存区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作区和暂存区"}},[s._v("#")]),s._v(" 工作区和暂存区")]),s._v(" "),t("h2",{attrs:{id:"工作区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作区"}},[s._v("#")]),s._v(" 工作区")]),s._v(" "),t("p",[s._v("什么叫做 Git 的工作区？")]),s._v(" "),t("p",[s._v("其实刚才我们的 "),t("code",[s._v("git-learn")]),s._v(" 文件夹就是一个工作区，你应该还记得这个文件夹下面有个隐藏的 "),t("code",[s._v(".git")]),s._v(" 文件夹，这个文件夹不是工作区，它是 Git 的版本库。")]),s._v(" "),t("h2",{attrs:{id:"暂存区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#暂存区"}},[s._v("#")]),s._v(" 暂存区")]),s._v(" "),t("p",[s._v("Git 的版本库文件夹里存储了很多东西，其中最重要的就是称为 stage（或者叫 index）的暂存区，对应着上面的 "),t("code",[s._v("index")]),s._v(" 文件。")]),s._v(" "),t("p",[s._v("还记得之前我们把文件提交到版本库里时是分为两个操作进行的吗？")]),s._v(" "),t("ol",[t("li",[s._v("第一步是用 "),t("code",[s._v("git add")]),s._v(" 把文件添加进去，实际上就是把文件修改添加到暂存区；")]),s._v(" "),t("li",[s._v("第二步是用 "),t("code",[s._v("git commit")]),s._v(" 提交更改，实际上就是把暂存区的所有内容提交到当前分支。")])]),s._v(" "),t("p",[s._v("因为我们创建 Git 版本库时，Git 自动为我们创建了唯一一个 master 分支，所以，现在，"),t("code",[s._v("git commit")]),s._v(" 就是往 master 分支上提交更改。")]),s._v(" "),t("p",[s._v("你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。\n俗话说，实践出真知。现在，我们再练习一遍，先对 "),t("code",[s._v("readme.txt")]),s._v(" 做个修改，比如加上一行内容：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Git is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("然后，在工作区新增一个 "),t("code",[s._v("LICENSE")]),s._v(" 文本文件（内容随便写）。")]),s._v(" "),t("p",[s._v("先用 "),t("code",[s._v("git status")]),s._v(" 查看一下状态：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\nOn branch master\nChanges not staged "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" commit:\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add <file>..."')]),s._v(" to update what will be committed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git checkout -- <file>..."')]),s._v(" to discard changes "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" working directory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\tmodified:   readme.txt\n\nUntracked files:\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add <file>..."')]),s._v(" to include "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" what will be committed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\tLICENSE\n\nno changes added to commit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v(" and/or "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit -a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("Git 非常清楚地告诉我们，"),t("code",[s._v("readme.txt")]),s._v(" 被修改了，而 "),t("code",[s._v("LICENSE")]),s._v(" 还从来没有被添加过，所以它的状态是 "),t("code",[s._v("Untracked")]),s._v("（意思是没有被 Git 追踪，因为没有 "),t("code",[s._v("git add")]),s._v(" 操作）。")]),s._v(" "),t("p",[s._v("现在，使用两次命令 "),t("code",[s._v("git add")]),s._v("，把 "),t("code",[s._v("readme.txt")]),s._v(" 和 "),t("code",[s._v("LICENSE")]),s._v(" 都添加后，用 "),t("code",[s._v("git status")]),s._v(" 再查看一下：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\nOn branch master\nChanges to be committed:\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git reset HEAD <file>..."')]),s._v(" to unstage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\tnew file:   LICENSE\n\tmodified:   readme.txt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("所以，"),t("code",[s._v("git add")]),s._v(" 命令实际上就是把要提交的所有修改放到暂存区（Stage、index），然后，执行 "),t("code",[s._v("git commit")]),s._v(" 就可以一次性把暂存区的所有修改提交到当前分支分支。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"understand how stage works"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("master e43a48b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" understand how stage works\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" files changed, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" insertions"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n create mode "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" LICENSE\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("一旦提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\nOn branch master\nnothing to commit, working tree clean\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);