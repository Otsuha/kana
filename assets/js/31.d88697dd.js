(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{356:function(s,a,e){"use strict";e.r(a);var t=e(4),v=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"忽略配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略配置文件"}},[s._v("#")]),s._v(" 忽略配置文件")]),s._v(" "),a("h2",{attrs:{id:"忽略配置文件是什么-有什么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略配置文件是什么-有什么用"}},[s._v("#")]),s._v(" 忽略配置文件是什么？有什么用？")]),s._v(" "),a("p",[s._v("有些文件虽然在 Git 工作区中，但你不希望提交他们，比如一些缓存文件、一些密码配置文件等。这些文件你永远不会也不能提交它们。你会怎么处理这些文件？")]),s._v(" "),a("p",[s._v("你可能会说，前面有提到过暂存区的概念。只有先 "),a("code",[s._v("git add")]),s._v(" 把文件添加到暂存区，然后再 "),a("code",[s._v("git commit")]),s._v(" 把暂存区的文件提交到 Git，那么这些文件我永远也不 "),a("code",[s._v("git add")]),s._v(" 就可以了。这确实是一个办法，但是当这些不提交的文件越来越多，你每次 "),a("code",[s._v("git status")]),s._v(" 时都会发现有大量文件处于 "),a("code",[s._v("Untracked files....")]),s._v(" 的状态，你的工作区永远也不会干净。")]),s._v(" "),a("p",[s._v("如果有一个特殊的配置文件，将这些你不需要提交的文件写进这个特殊文件里，Git 如果能在你 "),a("code",[s._v("git add")]),s._v(" 的时候自动忽略这些文件，不把它们当做 Git 工作区的一部分，是不是就方便许多？")]),s._v(" "),a("p",[s._v("而事实上 Git 提供了这样的配置文件，就是 Git 的忽略配置文件。")]),s._v(" "),a("h2",{attrs:{id:"创建忽略配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建忽略配置文件"}},[s._v("#")]),s._v(" 创建忽略配置文件")]),s._v(" "),a("p",[s._v("忽略配置文件名称是 "),a("code",[s._v(".gitignore")]),s._v("。注意它名称以 "),a("code",[s._v(".")]),s._v(" 开头，所以它会被大多数操作系统视为隐藏的文件，所以在创建完这个文件后你就会发现它“消失”了。这个时候将你的文件管理器设置为“显示隐藏的文件”，你就会再看见他了。"),a("code",[s._v(".gitignore")]),s._v(" 这个名字是固定的，你不能改变。")]),s._v(" "),a("p",[s._v("你可以用 "),a("code",[s._v("Visual Studio Code")]),s._v(" "),a("strong",[s._v("在 Git 工作区的根目录下")]),s._v("创建这个文件。最好不要用“记事本”创建，因为前面提到过，记事本会在文件开头自动给你添加一些特殊字符，会有不可预估的影响。")]),s._v(" "),a("p",[s._v("打开 "),a("code",[s._v(".gitignore")]),s._v(" 文件，接下来我们往里面添加内容。")]),s._v(" "),a("h2",{attrs:{id:"添加忽略文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加忽略文件"}},[s._v("#")]),s._v(" 添加忽略文件")]),s._v(" "),a("p",[s._v("往忽略配置文件里添加内容没有什么特殊规则，只要将你不需要提交的文件名写进去就可以了，一行一个：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("myPasswd.txt\nmyCacheFiles\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("当然你也可以往里面添加文件夹，git 会忽略文件夹下的所有文件，包括其子目录：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("allCacheFilesFold/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以像这样在名称尾添加 "),a("code",[s._v("/")]),s._v(" 来代表这是一个文件夹。")]),s._v(" "),a("p",[s._v("你也可以忽略某个文件夹下的某个文件或者其子目录：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("allCacheFilesFolder/\nallCacheFilesFolder/myFile.txt\nallCacheFilesFolder/subFolder/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"避开忽略规则强制添加文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避开忽略规则强制添加文件"}},[s._v("#")]),s._v(" 避开忽略规则强制添加文件")]),s._v(" "),a("p",[s._v("有些时候，你想添加一个文件到 Git，但发现添加不了，原因可能是这个文件被 "),a("code",[s._v(".gitignore")]),s._v(" 忽略了，要确定 "),a("code",[s._v(".gitignore")]),s._v(" 中是否有关于该文件的规则，你可以这样：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" check-ignore "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" App.class\n.gitignore:3:*.class\tApp.class\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("该命令的输出会告诉你 "),a("code",[s._v(".gitignore")]),s._v(" 文件的哪一行、什么规则使该文件被忽略了，我们就可以修改忽略规则了。")]),s._v(" "),a("p",[s._v("当然你也可以在 "),a("code",[s._v("git add")]),s._v(" 的时候添加 "),a("code",[s._v("-f")]),s._v(" 参数来强制改文件提交：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" App.class\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但是不建议这样做，因为这样做与 "),a("code",[s._v(".gitignore")]),s._v(" 文件规则冲突，破坏其规则。")]),s._v(" "),a("h2",{attrs:{id:"忽略配置文件的例外规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略配置文件的例外规则"}},[s._v("#")]),s._v(" 忽略配置文件的例外规则")]),s._v(" "),a("p",[s._v("其实有另外一种更好的方式处理上面的问题：你可以在 "),a("code",[s._v(".gitignore")]),s._v(" 中添加“例外规则”来使该文件可以被添加到 Git：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("allCacheFilesFolder/\nallCacheFilesFolder/myFile.txt\nallCacheFilesFolder/subFolder/\n\n!App.class\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这样 "),a("code",[s._v(".gitignore")]),s._v(" 在忽略规则使，就会把 "),a("code",[s._v("App.class")]),s._v(" 排除，让它可以被正常添加到 Git。")]),s._v(" "),a("h2",{attrs:{id:"忽略规则文件也应该被-git-管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略规则文件也应该被-git-管理"}},[s._v("#")]),s._v(" 忽略规则文件也应该被 Git 管理")]),s._v(" "),a("p",[a("code",[s._v(".gitignore")]),s._v(" 文件本身也应该被 Git 管理，什么意思？简单说来就是 "),a("code",[s._v(".gitignore")]),s._v(" 文件也应该 "),a("code",[s._v("git add")]),s._v(" 添加到 Git 做版本管理，这样有什么好处呢？")]),s._v(" "),a("p",[s._v("多人协作同一个项目时，你本地有需要缓存文件或者密码文件不需要提交，其他团队成员大概率也有。如果将 "),a("code",[s._v(".gitignore")]),s._v(" 传到 Git 中去，他们项目文件夹下也会有这份文件，团队成员之间可以保存相同的忽略规则。")]),s._v(" "),a("h2",{attrs:{id:"忽略配置文件不处理已经提交到-git-的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略配置文件不处理已经提交到-git-的文件"}},[s._v("#")]),s._v(" 忽略配置文件不处理已经提交到 Git 的文件")]),s._v(" "),a("p",[s._v("如果你的文件已经提交到 Git 中去了，然后你再在 "),a("code",[s._v(".gitigore")]),s._v(" 中忽略该文件，此时是无效的。解决方法就是：你可以先将该文件拷贝出来，然后在 Git 工作区中删除这个文件（如果已经提交到远程仓库了，确保远程仓库该文件也被删除了，方法就是删除文件后进行 "),a("code",[s._v("push")]),s._v(" 操作即可）。最后将这个文件重新添加到 Git。")])])}),[],!1,null,null,null);a.default=v.exports}}]);