(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{332:function(t,v,_){"use strict";_.r(v);var i=_(4),r=Object(i.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"git-简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-简介"}},[t._v("#")]),t._v(" Git 简介")]),t._v(" "),v("h2",{attrs:{id:"git-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-是什么"}},[t._v("#")]),t._v(" Git 是什么？")]),t._v(" "),v("p",[t._v("Git 是目前世界上最流行也是最先进的分布式版本控制系统。")]),t._v(" "),v("p",[t._v("这里有两个概念：分布式和版本控制系统。")]),t._v(" "),v("p",[t._v("什么是版本控制系统？这里参考维基百科一段对 Git 的定义：")]),t._v(" "),v("blockquote",[v("p",[t._v("版本控制（英语：Version control）是一种软件工程技巧，借此能在软件开发的过程中，"),v("font",{attrs:{color:"red"}},[v("b",[t._v("确保由不同人所编辑的同一程序和档案都能得到同步")])]),t._v("。")],1)]),t._v(" "),v("p",[t._v("其中关键的概念即最后一句话，道出 Git 的最大作用：确保不同人员编写的代码和其他文档可以得到同步。")]),t._v(" "),v("h2",{attrs:{id:"git-的使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-的使用场景"}},[t._v("#")]),t._v(" Git 的使用场景")]),t._v(" "),v("p",[t._v("如果没有版本控制系统会怎么样？试着想象这样一个场景：")]),t._v(" "),v("p",[t._v("假如你是一个团队的开发主管，你需要和你团队中的其他人共同编写一段代码，有些部分需要你来编写，而有些部分则需要团队的其他人员辅助你来完成，并且你需要对他们写的代码进行审查。那么你们之间的协作方式是怎么样的？")]),t._v(" "),v("ol",[v("li",[t._v("你自己先噼里啪啦写一大段代码。")]),t._v(" "),v("li",[t._v("将这段代码拷贝给团队其他人员，由他们各自完成各自的部分。")]),t._v(" "),v("li",[t._v("你自己编写剩下的代码。")]),t._v(" "),v("li",[t._v("团队成员把他们各自的代码拷贝给你，由你来进行审查。问题来了：\n"),v("ol",[v("li",[t._v("团队成员传给你的代码，哪些是原来你自己写的？哪些是他们新加的？你能分辨出来吗？")]),t._v(" "),v("li",[t._v("在最开始你代码交给他们，到他们再将代码提交给你的这段时间，你又做了哪些改动？你记得吗？")]),t._v(" "),v("li",[t._v("就算你可以区分哪些代码是你写的，哪些代码是团队成员写的，那么如何将他们的代码合并到你的代码上来呢？只有将每个人负责的部分代码合并起来，才是完成的业务逻辑。那怎么合并？复制粘贴？那简直是地狱！")])])])]),t._v(" "),v("p",[t._v("没错，Git 就是为了解决这样的问题而诞生的，有了 Git，上面的问题都将不复存在。Git 可以快速且正确地帮你区分各自成员的代码，以及帮你将他们各部分正确无误地合并。")])])}),[],!1,null,null,null);v.default=r.exports}}]);