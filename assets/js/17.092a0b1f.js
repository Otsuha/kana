(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{344:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"添加远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加远程仓库"}},[s._v("#")]),s._v(" 添加远程仓库")]),s._v(" "),t("p",[s._v("我们假设现在你已经注册了 Github 账号，并且已经在之前的教程中创建了一个本地仓库，现在我们让这个本地仓库上传到 Github。")]),s._v(" "),t("h2",{attrs:{id:"添加远程仓库有什么好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加远程仓库有什么好处"}},[s._v("#")]),s._v(" 添加远程仓库有什么好处？")]),s._v(" "),t("p",[s._v("将本地仓库上传到 Github 后，你的代码就在远程有了一份备份，这样你就可以在任何时候、在任何设备上访问你的代码了。")]),s._v(" "),t("p",[s._v("当然最重要的是，其他人可以通过这个远程库访问你的代码，并和你一起开发这个项目，你们之间的协作将变得非常简单。")]),s._v(" "),t("h2",{attrs:{id:"在-github-上增加一个远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-github-上增加一个远程仓库"}},[s._v("#")]),s._v(" 在 Github 上增加一个远程仓库")]),s._v(" "),t("p",[s._v("登录你的账号后，点击右上角的“+”号，弹出一个列表，点击“new repository”。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nagiko.oss-cn-shanghai.aliyuncs.com/kana/git-guide/31.1.png",alt:""}})]),s._v(" "),t("p",[s._v("点击后进入创建新仓库的配置页面，如下图，注意下图中的几个框：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nagiko.oss-cn-shanghai.aliyuncs.com/kana/git-guide/31.2.png",alt:""}})]),s._v(" "),t("p",[s._v("你真正需要填写的第一个信息是“Repository name”，这是你的仓库的名字，我们不妨根据之前创建好的本地仓库名字将这个远程仓库也命名为“git-learn”。")]),s._v(" "),t("p",[s._v("第二个需要注意的是“public”以及“private”选项，根据每个选项下面的描述可知，“public”意味着该仓库互联网上所有用户可知，所有人都可以访问这个仓库并与你协作。“private”则表示这个仓库只有你以及你邀请的用户可以访问并与你协作，安全性更高。")]),s._v(" "),t("p",[s._v("设置好着两个必须项后，直接点击“Create repository”创建一个仓库。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nagiko.oss-cn-shanghai.aliyuncs.com/kana/git-guide/31.3.png",alt:""}})]),s._v(" "),t("p",[s._v("接下来你会看到上面这个页面，Github 已经告诉你如何将本次仓库推送到我们刚刚创建好的这个远程库上来了。")]),s._v(" "),t("h2",{attrs:{id:"将本地仓库推送到远程库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将本地仓库推送到远程库"}},[s._v("#")]),s._v(" 将本地仓库推送到远程库")]),s._v(" "),t("p",[s._v("由于我们已经有了一个本地库了，所以我们只需要关注红框中的内容，我们可以按照上面的指示一起操作下：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://github.com/xxx/git-learn.git\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-M")]),s._v(" main\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" origin main\nCounting objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(", done.\nDelta compression using up to "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" threads.\nCompressing objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("/15"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nWriting objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("/20"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.64")]),s._v(" KiB "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("560.00")]),s._v(" KiB/s, done.\nTotal "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", reused "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nremote: Resolving deltas: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("/5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nTo github.com:michaelliao/learngit.git\n * "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("new branch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("      main -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" main\nBranch "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" up to track remote branch "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main'")]),s._v(" from "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("blockquote",[t("p",[s._v("注意将“xxx”换成你自己的名称。")])]),s._v(" "),t("p",[t("code",[s._v("git push -u")]),s._v("  中的 "),t("code",[s._v("-u")]),s._v(" 参数代表 Git 不但会把本地的 master 分支内容推送的远程新的 "),t("code",[s._v("master")]),s._v(" 分支，还会把本地的 "),t("code",[s._v("master")]),s._v(" 分支和远程的 "),t("code",[s._v("master")]),s._v(" 分支关联起来，在以后的推送或者拉取时就可以简化命令。")]),s._v(" "),t("p",[s._v("你可能会好奇为什么一会儿叫“main”分支一会儿又叫“master”分支。这是有一定历史原因的，所以你以后看见这两个分支名时不必感到困惑，这都是 Git 创建的主分支的默认名字。但是必须注意的是，在你第一次将本地分支推送到远程分支时，本地分支名会被远程分支名同步，但你以后如果想再改分支名的话，就必须手动设置来使本地库分支名和远程库分支名保持同步。")]),s._v(" "),t("blockquote",[t("p",[s._v("在创建 Git 仓库时会默认生成一个主分支，在以前这个分支名叫“master”。由于 2020 年 6 月起美国“Black Lives Matter”抗议活动的持续发酵，很多人觉得“master（主人、掌握）”带有种族歧视的色彩，应该被替换掉，这个响应得到了许多人的认可，于是“master”逐渐被改为“main”。")])]),s._v(" "),t("p",[s._v("现在你看看 Github 上的页面，你会发现 Github 上已经有你的代码了：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nagiko.oss-cn-shanghai.aliyuncs.com/kana/git-guide/31.4.png",alt:""}})]),s._v(" "),t("p",[s._v("从今以后，如果你再想向远程库提交代码，就只需要如下命令即可：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"自定义远程库名称"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义远程库名称"}},[s._v("#")]),s._v(" 自定义远程库名称")]),s._v(" "),t("p",[s._v("还记得上面添加远程库时使用的指令吗？")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://github.com/xxx/git-learn.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("前面的 "),t("code",[s._v("git remote add")]),s._v(" 是固定的添加远程库指令，后面带着一个参数 "),t("code",[s._v("origin")]),s._v("，这是你自定义的添加的远程库的名称。请不要把这个 "),t("code",[s._v("origin")]),s._v(" 的名字和远程库名字 "),t("code",[s._v("git-learn")]),s._v(" 混淆了。"),t("code",[s._v("origin")]),s._v(" 你可以认为简单认为是“https://github.com/xxx/git-learn.git”这个地址的别名，或者是本地库与远程库"),t("strong",[s._v("绑定关系")]),s._v("的一个别名。")]),s._v(" "),t("p",[s._v("一般情况下你不必自定义远程库 "),t("code",[s._v("origin")]),s._v(" 的名称，"),t("code",[s._v("origin")]),s._v(" 是众所周知的叫法。当然在有特殊需求的情况下你也可以更改：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" “自定义名称” https://github.com/xxx/git-learn.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"删除远程库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除远程库"}},[s._v("#")]),s._v(" 删除远程库")]),s._v(" "),t("p",[s._v("有时候添加远程库时你的地址写错了，或者感觉你的“自定义名称”不好听，或者你就是想删除远程库时，你可以通过如下指令来删除远程库：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" origin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到 GitHub，在后台页面找到删除按钮再删除。")])])}),[],!1,null,null,null);t.default=e.exports}}]);