(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{341:function(t,i,v){"use strict";v.r(i);var _=v(4),a=Object(_.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git-远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-远程仓库"}},[t._v("#")]),t._v(" Git 远程仓库")]),t._v(" "),i("p",[t._v("在第一章刚开始我们就说到过，Git 是分布式的版本控制系统。前面我们提及到的各种操作（版本回退、管理修改等）并不是 Git 独有的操作，其他的许多版本控制系统（例如 SVN）也具有这些操作。而真正让 Git 在各种版本控制系统中脱颖而出的，就是它的“分布式”特性。")]),t._v(" "),i("h2",{attrs:{id:"集中式-vs-分布式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#集中式-vs-分布式"}},[t._v("#")]),t._v(" 集中式 VS 分布式")]),t._v(" "),i("p",[t._v("我们先来说说什么是集中式的版本控制系统。")]),t._v(" "),i("p",[t._v("集中式版本控制系统有一个中央服务器，版本库都是集中存放在中央处理器中的。干活的时候，需要先将服务器中的版本整个拉取到本地，然后工作，工作完后再将整个版本推送到服务器上。")]),t._v(" "),i("p",[t._v("集中式版本控制系统最大的毛病就是必须联网才可以工作，因为它的第一步就是必须将中央服务器上的最新版本拉取下来。试想，如果中央处理器“挂掉”了，那么所有人都没办法工作了。")]),t._v(" "),i("p",[t._v("而分布式版本控制系统它并没有一个中央处理器，每个人电脑上仓库都是一个完整的版本库，并没有主次之分。这样你工作的时候就不需要联网了，你可以正常写代码，执行"),i("code",[t._v("git add")]),t._v("、"),i("code",[t._v("git commit")]),t._v(" 等操作，只需要在有网的时候，将远程仓库的最新版本合并到你的代码，然后将你本地的版本库推送到远程即可。")]),t._v(" "),i("p",[t._v("与集中式版本控制系统相比，分布式版本系统更安全。每个人电脑上都有完整的版本库，某个人电脑坏了不要紧，随便从其他人那里复制一份即可。集中式版本控制系统的中央服务器要是有问题，所有人没办法工作。")]),t._v(" "),i("p",[t._v("这么说来集中式版本控制系统就一点用也没有吗？不是的，集中式版本控制系统对比分布式版本控制系统来说有以下优点：")]),t._v(" "),i("ol",[i("li",[t._v("对于保密性要求更高的项目，集中式版本控制系统更好。分布式版本控制系统每个人电脑上都有一个完整的版本，保密性自然不行。")]),t._v(" "),i("li",[t._v("SVN 等集中式版本控制系统通常对二进制文件有着更好的支持，而 Git 不支持二进制文件（具体详见“"),i("RouterLink",{attrs:{to:"/pages/08d199/#往版本库添加文件"}},[t._v("往版本库添加文件")]),t._v('"）。')],1)]),t._v(" "),i("h2",{attrs:{id:"git-远程仓库-2"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-远程仓库-2"}},[t._v("#")]),t._v(" Git 远程仓库")]),t._v(" "),i("p",[t._v("其实 Git 也有一个远程仓库，Git 远程仓库除了有保存代码的作用外，主要的作用是方便团队成员之间的项目协作。")]),t._v(" "),i("p",[t._v("你可以自己搭建一个 Git 远程库，不过这部分内容不在本教程之内，请各位自己搜索相关资料。")]),t._v(" "),i("p",[t._v("除了自己搭建 Git 远程库外，你可以利用现有的商业化的 Git 托管服务，比如世界上最大的 Git 托管服务 "),i("a",{attrs:{href:"https://github.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),i("OutboundLink")],1),t._v("。只需要在 Github 上注册一个账号，你就可以获得免费的 Git 远程仓库。")]),t._v(" "),i("h2",{attrs:{id:"通过-ssh-连接到-github"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#通过-ssh-连接到-github"}},[t._v("#")]),t._v(" 通过 SSH 连接到 Github")]),t._v(" "),i("p",[t._v("你的本地仓库和 Github 之间的数据传输是通过 SSH 加密的，所以你需要在你的本地电脑上配置 SSH 密钥，然后将你的密钥配置到 Github 上。")]),t._v(" "),i("p",[t._v("至于如何配置，请参考 Github 的官方文档“"),i("a",{attrs:{href:"https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成新的 SSH 密钥并将其添加到 ssh-agent"),i("OutboundLink")],1),t._v("”。")]),t._v(" "),i("p",[t._v("为什么需要 SSH 密钥？因为 Github 需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而这个 SSH 密钥其实就是配置你和 Github 网站之间的身份验证信息的。")]),t._v(" "),i("p",[t._v("当然，Github 允许你添加多个密钥。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的 Key 都添加到 Github，就可以在每台电脑上往 Github 推送了。")]),t._v(" "),i("p",[t._v("需要注意的是，Github 上面的内容所有人都可以看到（除非你配置私有仓库），所以"),i("strong",[t._v("请不要将个人或者企业的敏感信息上传到 Github 上")]),t._v("。")])])}),[],!1,null,null,null);i.default=a.exports}}]);