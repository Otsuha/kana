(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{357:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"配置别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置别名"}},[s._v("#")]),s._v(" 配置别名")]),s._v(" "),t("p",[s._v("这个 Git 教程进行到现在，我们已经学了太多的 Git 操作了，而这些操作都是在命令行中操作的。这么多命令我们怎么记得住呢？而且一些单词也难记，容易敲错。")]),s._v(" "),t("h2",{attrs:{id:"添加别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加别名"}},[s._v("#")]),s._v(" 添加别名")]),s._v(" "),t("p",[s._v("我们可以给这些命令配置别名来让这些操作更好记、更符合你的习惯。比如 "),t("code",[s._v("git status")]),s._v(" 我们可以这样设置别名：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" alias.st status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这样以后你就可以用 "),t("code",[s._v("git st")]),s._v(" 来替代 "),t("code",[s._v("git status")]),s._v(" 了：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" st\nYour branch is up to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" with "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/main'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\nChanges not staged "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" commit:\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add/rm <file>..."')]),s._v(" to update what will be committed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git restore <file>..."')]),s._v(" to discard changes "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" working directory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        deleted:    test.txt\n\nUntracked files:\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add <file>..."')]),s._v(" to include "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" what will be committed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        .gitignore\n\nno changes added to commit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v(" and/or "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit -a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("code",[s._v("--global")]),s._v(" 代表这个别名设置是全局生效的，意味着这些别名在这台电脑上所有 Git 仓库下都可使用。如果不加这个参数，说明这个别名配置只对当前仓库生效。这些别名配置文件其实在 "),t("code",[s._v(".git/config")]),s._v(" 文件中，我们打开这个文件看看：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("core"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\trepositoryformatversion "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\tfilemode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\tbare "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n\tlogallrefupdates "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\tignorecase "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\tprecomposeunicode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\turl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://github.com//git-learn.git\n\tfetch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" +refs/heads/*:refs/remotes/origin/*\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\tremote "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" origin\n\tmerge "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" refs/heads/main\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("alias"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\tst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("看见了吗？刚才我们设置的别名在第 15 行可以看到。")]),s._v(" "),t("h2",{attrs:{id:"不建议过分使用别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不建议过分使用别名"}},[s._v("#")]),s._v(" 不建议过分使用别名")]),s._v(" "),t("p",[s._v("如果要设置别名，建议使用 "),t("code",[s._v("--global")]),s._v(" 全局参数，因为如果你对每一个参数设置不一样的别名，最后你自己会混乱，反而降低了效率。")]),s._v(" "),t("p",[s._v("当然使用别名也有一些坏处，你可以长久使用别名后对原本的指令已经没有印象了，这不是一件好事，所以使用别名需要慎重，你自己要衡量利弊。")]),s._v(" "),t("p",[s._v("当然，大部分开发者都使用 Git 的图形化客户端去处理 Git 相关操作，这些指令他们可能已经很久没接触过了，但是就算是使用图形化客户端，你也应该明白每一次的操作其实这些客户端都在背后帮你完成这些指令，所以初学者理解这些指令是非常必要的。")])])}),[],!1,null,null,null);t.default=e.exports}}]);